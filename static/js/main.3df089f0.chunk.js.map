{"version":3,"sources":["components/Element.js","components/Table.js","components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["StyledElement","styled","div","Element","number","setState","className","data","elements","category","onClick","e","isOpen","id","symbol","name","StyledTable","Table","createElements","lanthanides","actinides","i","push","map","elem","StyledModal","Modal","open","handleClick","checkUnknown","checkUnits","units","ReactDOM","createPortal","appearance","summary","phase","atomic_mass","density","molar_heat","melt","boil","href","source","target","rel","document","getElementById","App","useState","state","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.3df089f0.chunk.js","sourcesContent":["import React from 'react'\r\nimport data from '../PeriodicTableData.json'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledElement = styled.div`\r\n    width: 5vw;\r\n    height: 5vw;\r\n    padding: 2px;\r\n    border: 1px solid #333;\r\n    border-collapse: collapse;\r\n    overflow: hidden;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        border: 3px solid black;\r\n    }\r\n\r\n    #atomic-number {\r\n        float: left;\r\n        font-size: 0.5vw;\r\n        position: absolute;\r\n    }\r\n\r\n    #symbol {\r\n        font-weight: bold;\r\n        text-align: center;\r\n        margin-top: 0.5vw;\r\n        font-size: 2vw;\r\n    }\r\n\r\n    #name {\r\n        font-size: 0.7vw;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst Element = ({ number, setState, className }) => {\r\n    const handleClick = (e) => setState({isOpen: true, number: number});\r\n\r\n    return (\r\n        <StyledElement className={data.elements[number].category + ' ' + className} onClick={handleClick}>\r\n            <div id=\"atomic-number\">{data.elements[number].number}</div>\r\n            <div id=\"symbol\">{data.elements[number].symbol}</div>\r\n            <div id=\"name\">{data.elements[number].name}</div>\r\n        </StyledElement>\r\n    )\r\n}\r\n\r\nexport default Element\r\n","import React from 'react'\r\nimport Element from './Element'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledTable = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(17, auto) 1fr; \r\n\r\n    .row1 {\r\n        grid-column: 2 / 18;\r\n    }\r\n\r\n    .row2 {\r\n        grid-column: 3 / 13;\r\n        grid-row: 2 / 4;\r\n    }\r\n\r\n    .space {\r\n        grid-column: 1 / 3;\r\n    }\r\n`;\r\n\r\nconst Table = ({ setState }) => {\r\n    const createElements = () => {\r\n        let elements = [];\r\n        let lanthanides = [<div className=\"space\"></div>, <div>*</div>];\r\n        let actinides = [<div className=\"space\"></div>, <div>**</div>];\r\n\r\n        for (var i = 0; i < 118; i++){\r\n            switch (i) {\r\n                case 1:\r\n                    elements.push(<div className=\"row1\"></div>);\r\n                    break;\r\n                case 4:\r\n                    elements.push(<div className=\"row2\"></div>);\r\n                    break;\r\n                case 56:\r\n                    elements.push(<div>*</div>);\r\n                    break;\r\n                case 88:\r\n                    elements.push(<div>**</div>);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            if (i >= 56 && i <= 70) {\r\n                lanthanides.push(<Element key={i} number={i} setState={setState} />);\r\n            } else if (i >= 88 && i <= 102) {\r\n                actinides.push(<Element key={i} number={i} setState={setState} />);\r\n            } else {\r\n                elements.push(<Element key={i} number={i} setState={setState} />);\r\n            }\r\n        }\r\n        return {\r\n            elements: elements,\r\n            lanthanides: lanthanides,\r\n            actinides: actinides\r\n        };\r\n    }\r\n\r\n    return (\r\n        <StyledTable>\r\n            {createElements().elements.map(elem => elem)}\r\n            <br></br>\r\n            <br></br>\r\n            {createElements().lanthanides.map(elem => elem)}\r\n            {createElements().actinides.map(elem => elem)}\r\n        </StyledTable>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport data from '../PeriodicTableData.json'\r\nimport styled from 'styled-components'\r\nimport Element from './Element'\r\n\r\nconst StyledModal = styled.div`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: white;\r\n    width: 30%;\r\n    min-width: 470px;\r\n    z-index: 1000;\r\n    text-align: center;\r\n    padding: 10px;\r\n\r\n    .close {\r\n        position: absolute;\r\n        top: 5px;\r\n        right: 5px;\r\n    }\r\n\r\n    .elem {\r\n        width: 10vw;\r\n        min-width: 188px;\r\n        height: 10vw;\r\n        min-height: 188px;\r\n        margin: auto;\r\n        font-size: xx-large;\r\n        padding-top: 10px;\r\n        float: left;\r\n        margin-right: 10px;\r\n        margin-bottom: 20px;\r\n        border: 1px solid black;\r\n        cursor: default;\r\n    }\r\n\r\n    .elem #atomic-number {\r\n        font-size: 15px;\r\n        padding-left: 10px;\r\n    }\r\n\r\n    .elem #symbol {\r\n        font-size: 85px;\r\n    }\r\n\r\n    .elem #name {\r\n        font-size: 25px;\r\n    }\r\n\r\n    .summary {\r\n        clear: left;\r\n        text-align: left;\r\n    }\r\n\r\n    table {\r\n        margin: auto;\r\n        border-collapse: collapse;\r\n        border: 1px solid #ddd;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    th, td {\r\n        border-bottom: 1px solid #ddd;\r\n        padding: 10px;\r\n    }\r\n\r\n    th{\r\n        text-align: right;\r\n    }\r\n\r\n    tr:nth-child(odd) {\r\n        background-color: #f2f2f2;\r\n    }\r\n\r\n    td {\r\n        text-align: left;\r\n    }\r\n\r\n    @media (max-height: 800px) {\r\n        font-size: 2vh;\r\n\r\n        .elem {\r\n            width: 135px;\r\n            min-width: 9vw;\r\n            height: 135px;\r\n            min-height: 9vw;\r\n        }\r\n\r\n        .elem #symbol {\r\n            font-size: 50px;\r\n        }\r\n\r\n        .elem #name {\r\n            font-size: 20px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Modal = ({ open, number, setState }) => {\r\n    if (!open) return null;\r\n\r\n    const handleClick = () => setState({ isOpen: false, number: number });\r\n    const checkUnknown = (data) => data === null ? \"unknown\" : data;\r\n    const checkUnits = (data, units) => data === \"unknown\" ? data : data + \" \" + units;\r\n\r\n    return ReactDOM.createPortal(\r\n        <>\r\n            <div className=\"modal_bg\" onClick={handleClick} />\r\n            <StyledModal>\r\n                <button className=\"close\" onClick={handleClick}>X</button>\r\n                <Element className=\"elem\" number={number} setState={setState}/>\r\n                <h1>{data.elements[number].name}</h1>\r\n                <p>{data.elements[number].category}</p>\r\n                <p>Appearance: {checkUnknown(data.elements[number].appearance)}</p>\r\n                <p className=\"summary\">{data.elements[number].summary}</p>\r\n\r\n                <table>\r\n                    <tr>\r\n                        <th>Phase</th>\r\n                        <td>{data.elements[number].phase}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Atomic Number</th>\r\n                        <td>{data.elements[number].number}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Atomic Mass</th>\r\n                        <td>{checkUnits(checkUnknown(data.elements[number].atomic_mass), \"u\")}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Density</th>\r\n                        <td>{checkUnits(checkUnknown(data.elements[number].density), \"g/cm^3\")}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Molar Heat</th>\r\n                        <td>{checkUnits(checkUnknown(data.elements[number].molar_heat), \"J/mol K\")}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Melting Point</th>\r\n                        <td>{checkUnits(checkUnknown(data.elements[number].melt), \"K\")}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Boiling Point</th>\r\n                        <td>{checkUnits(checkUnknown(data.elements[number].boil), \"K\")}</td>\r\n                    </tr>\r\n                </table>\r\n\r\n                <a href={data.elements[number].source} target=\"_blank\" rel=\"noreferrer\">Source</a>\r\n            </StyledModal>\r\n        </>,\r\n            document.getElementById('portal')\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Table from './components/Table';\nimport Modal from './components/Modal';\n\nfunction App() {\n  const [state, setState] = useState({\n    isOpen: false,\n    number: 0,\n  });\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <h1>The Periodic Table of Elements</h1>\n        <Table setState={setState} />\n        <Modal open={state.isOpen} number={state.number} setState={setState} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}